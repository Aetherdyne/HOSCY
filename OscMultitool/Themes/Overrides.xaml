<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ui="clr-namespace:Hoscy.Ui">

    <Style x:Key="HTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="{Binding Source={x:Static ui:UiHelper.ColorWhite}}"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{Binding Source={x:Static ui:UiHelper.ColorWhite}}"/>
        <Setter Property="TextWrapping" Value="NoWrap"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontFamily" Value="Microsoft YaHei UI"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="SelectionBrush" Value="{Binding Source={x:Static ui:UiHelper.ColorAccent}}"/>
        <Setter Property="CaretBrush" Value="{Binding Source={x:Static ui:UiHelper.ColorAccent}}"/>
        <Setter Property="SelectionOpacity" Value="0.5"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Padding" Value="4,4,4,4"/>

        <Setter Property="Tag" Value=""/>
        
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="VerticalScrollBarVisibility" Value="Hidden" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" CornerRadius="4" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                        <Grid x:Name="container">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}" VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}" />
                            <TextBlock x:Name="placeholder" Margin="{TemplateBinding Padding}" IsHitTestVisible="False" Text="{TemplateBinding Tag}" VerticalAlignment="Top" HorizontalAlignment="Left" Foreground="{TemplateBinding Foreground}" Visibility="Collapsed" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{x:Static ui:UiHelper.ColorAccent}" />
                            <Setter Property="Background" TargetName="border" Value="#FF1F1F1F" />
                            <Setter Property="Foreground" Value="#FFFFFFFF" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsFocused}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="placeholder"  Value="Visible"/>
                            <Setter Property="Foreground" Value="#FFCFCFCF"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource HTextBox}"/>

    <Style x:Key="HButton" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{Binding Source={x:Static ui:UiHelper.ColorWhite}}"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{Binding Source={x:Static ui:UiHelper.ColorWhite}}"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontFamily" Value="Microsoft YaHei UI"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="4" BorderThickness="2" Background="{Binding Source={x:Static ui:UiHelper.ColorGrayLight}}" BorderBrush="{Binding Source={x:Static ui:UiHelper.ColorAccent}}">
                        <ContentPresenter x:Name="ButtonContentPresenter" Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource HButton}"/>

    <Style x:Key="HLabel" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{Binding Source={x:Static ui:UiHelper.ColorWhite}}"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontFamily" Value="Microsoft YaHei UI"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
    </Style>
    <Style TargetType="{x:Type Label}" BasedOn="{StaticResource HLabel}"/>

    <Style x:Key="HComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="Foreground" Value="{Binding Source={x:Static ui:UiHelper.ColorBlack}}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="Microsoft YaHei UI"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
    </Style>
    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource HComboBox}"/>

    <Style x:Key="HCheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{Binding Source={x:Static ui:UiHelper.ColorWhite}}"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontFamily" Value="Microsoft YaHei UI"/>
        <Setter Property="BorderBrush" Value="{Binding Source={x:Static ui:UiHelper.ColorWhite}}"/>
        <Setter Property="Background" Value="{Binding Source={x:Static ui:UiHelper.ColorWhite}}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
    </Style>
    <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource HCheckBox}"/>

    <!-- This does not have a direct overwrite as it causes issues -->
    <Style x:Key="HTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{Binding Source={x:Static ui:UiHelper.ColorWhite}}"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontFamily" Value="Microsoft YaHei UI"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
    </Style>

    <Style x:Key="HListBox" TargetType="{x:Type ListBox}">
        <Setter Property="Foreground" Value="{Binding Source={x:Static ui:UiHelper.ColorWhite}}"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontFamily" Value="Microsoft YaHei UI"/>
        <Setter Property="BorderBrush" Value="{Binding Source={x:Static ui:UiHelper.ColorWhite}}"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
    </Style>
    <Style TargetType="{x:Type ListBox}" BasedOn="{StaticResource HListBox}"/>
</ResourceDictionary>